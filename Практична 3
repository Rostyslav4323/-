#include <stdio.h>

// Функція для підрахунку кількості чисел із розрядами
int countNumbers(int r) {
    if (r <= 0)
        return 0;

    // Ініціалізуємо динамічний масив для збереження кількості чисел
    int dp[31][2][2] = {0};

    // Ініціалізуємо початкові значення
    dp[1][0][0] = 2; // Для 1-розрядного числа, 5 та 9 є можливими цифрами
    dp[1][1][0] = 2; // Для 1-розрядного числа, 5 та 9 є можливими цифрами
    dp[1][0][1] = 1; // Для 1-розрядного числа, 5 та 9 є можливими цифрами
    dp[1][1][1] = 1; // Для 1-розрядного числа, 5 та 9 є можливими цифрами

    // Обчислюємо кількість чисел з розрядами
    for (int i = 2; i <= r; i++) {
        dp[i][0][0] = dp[i-1][0][0] + dp[i-1][1][0]; // Остання цифра 5
        dp[i][1][0] = dp[i-1][0][0] + dp[i-1][0][1]; // Остання цифра 9
        dp[i][0][1] = dp[i-1][0][0]; // Остання цифра не 5 і не 9
        dp[i][1][1] = dp[i-1][1][0]; // Остання цифра не 5 і не 9
    }

    // Сумуємо кількості чисел з останніми цифрами 5 та 9
    int totalCount = dp[r][0][0] + dp[r][1][0];

    return totalCount;
}

int main() {
    // Оголошуємо змінну
    int r;
    printf("Введіть число розрядів р: ");
    scanf("%d", &r);

    // Знаходимо кількість чисел з розрядами
    int result = countNumbers(r);

    // Виводимо результат
    printf("Кількість чисел із розрядами %d: %d\n", r, result);

    return 0;
}
